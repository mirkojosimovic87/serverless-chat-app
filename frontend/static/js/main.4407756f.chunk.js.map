{"version":3,"sources":["components/app-bar/app-bar.component.jsx","config.js","auth.js","components/chatGrid/fileUpload.component.jsx","components/chatGrid/chatGrid.component.jsx","components/home/newChat.jsx","components/home/welcome.component.jsx","components/home/home.component.jsx","components/profile/createprofile.component.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBar","position","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButtonHidden","title","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","MenuAppBar","props","classes","React","useState","anchorEl","setAnchorEl","openMenu","Boolean","handleClose","className","AppBar","clsx","Toolbar","Typography","variant","auth","is_loggedIn","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","user","name","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","logout","Button","login","baseUrl","websocketUrl","authConfig","Auth","history","accessToken","localStorage","getItem","idToken","expiresAt","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","this","JSON","parse","bind","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","parseHash","err","authResult","console","log","setSession","replace","alert","error","expiresIn","Date","getTime","setItem","axios","headers","res","data","stringify","checkSession","error_description","removeItem","return_to","window","location","origin","DropzoneDialogExample","state","files","setState","url","sendMsg","path","handleOpen","onSave","handleSave","acceptedFiles","showPreviews","maxFileSize","multiple","Component","ChatGrid","handleSend","newMsg","type","msg","socket","send","action","to","currChat","username","handleNewMsgChange","e","target","value","keyPress","shiftKey","key","preventDefault","msgList","loading","msgListElement","createRef","WebSocket","onopen","onclose","onmessage","item","from","msgs","push","text","message","date","createdAt","uri","photoUrl","chatList","index","lastMsg","subtitle","unread","setData","getChats","prevProps","prevState","snapshot","a","i","f","node","current","scrollBottom","getBottom","mlistRef","checkScroll","GridList","direction","cellHeight","style","height","active","spinner","GridListTile","rows","cols","left","src","alt","size","center","right","ref","lockable","toBottomHeight","dataSource","downButton","Grid","container","xs","TextField","placeholder","margin","fullWidth","multiline","rowsMax","InputLabelProps","shrink","onChange","onKeyDown","marginTop","modal","paper","backgroundColor","palette","background","boxShadow","shadows","closeBtn","float","NewChatModal","setOpen","setUserName","setMsg","errors","setError","handleSubmit","post","Fab","bottom","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","textAlign","FormGroup","required","label","heroContent","heroButtons","Welcome","CssBaseline","Container","maxWidth","component","align","gutterBottom","marginBottom","paragraph","justify","Link","href","Home","chats","c","chat","unreadCount","response","status","handleChatClick","appBarSpacer","paperMarginTop","elevation","classname","top","transform","flexDirection","avatar","secondary","main","form","submit","Form","nameChange","toString","length","validName","usernameChange","validUsername","config","then","catch","autoComplete","FormHelperText","CreateProfile","Avatar","withRouter","useHistory","render","AuthCallback","CircularProgress","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4407756f.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Button from \"@material-ui/core/Button\";\nimport clsx from \"clsx\";\n\nconst drawerWidth = 340;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        position: 'absolute',\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n}));\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const openMenu = Boolean(anchorEl);\n\n\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        props.auth.logout();\n        handleClose();\n    };\n\n    const handleLogin = () => {\n        props.auth.login();\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={clsx(classes.appBar)}>\n                <Toolbar className={classes.toolbar}>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {props.title}\n                    </Typography>\n                    {props.auth.is_loggedIn && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle/>\n                            </IconButton>\n                            <Typography variant={'h7'} className={classes.title}>\n                                {props.auth.user ? props.auth.user.name : ''}\n                            </Typography>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={openMenu}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                            </Menu>\n                        </div>\n                    )}\n                    {!props.auth.is_loggedIn && <Button color=\"inherit\" onClick={handleLogin}>Login</Button>}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","export const baseUrl = 'https://5bgmt3bev4.execute-api.us-east-1.amazonaws.com/dev'\nexport const websocketUrl= 'wss://l3t0mzaam8.execute-api.us-east-1.amazonaws.com/dev'\n\nexport const authConfig = {\n  domain: 'pnshiralkar.auth0.com',            // Auth0 domain\n  clientId: 'rBDOYrRsCCFVjmBBDwKnRF3tXoqjWYAk',          // Auth0 client id\n  callbackUrl: 'https://d3nf7m4z1t4ner.cloudfront.net/callback'\n}\n","import auth0 from 'auth0-js';\nimport {authConfig} from './config';\nimport * as axios from \"axios\";\nimport {baseUrl} from './config'\n\nexport default class Auth {\n    accessToken = localStorage.getItem('accessToken');\n    idToken = localStorage.getItem('idToken');\n    expiresAt = localStorage.getItem('expiresAt');\n    is_loggedIn = localStorage.getItem('isLoggedIn') || false;\n    user;\n\n    auth0 = new auth0.WebAuth({\n        domain: authConfig.domain,\n        clientID: authConfig.clientId,\n        redirectUri: authConfig.callbackUrl,\n        responseType: 'token id_token',\n        scope: 'openid'\n    });\n\n    constructor(history) {\n        this.history = history\n        try{\n            this.user = JSON.parse(localStorage.getItem('user'))\n        }finally {}\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.isAuthenticated = this.isAuthenticated.bind(this);\n        this.getAccessToken = this.getAccessToken.bind(this);\n        this.getIdToken = this.getIdToken.bind(this);\n        this.renewSession = this.renewSession.bind(this);\n    }\n\n    login() {\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        this.auth0.parseHash((err, authResult) => {\n            if (authResult && authResult.accessToken && authResult.idToken) {\n                console.log('Access token: ', authResult.accessToken)\n                console.log('id token: ', authResult.idToken)\n                this.setSession(authResult);\n            } else if (err) {\n                this.history.replace('/');\n                console.log(err);\n                alert(`Error: ${err.error}. Check the console for further details.`);\n            }\n        });\n    }\n\n    getAccessToken() {\n        return this.accessToken;\n    }\n\n    getIdToken() {\n        return this.idToken;\n    }\n\n    async setSession(authResult) {\n        // Set isLoggedIn flag in localStorage\n        this.is_loggedIn = true;\n\n        // Set the time that the access token will expire at\n        let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n        this.accessToken = authResult.accessToken;\n        this.idToken = authResult.idToken;\n        this.expiresAt = expiresAt;\n\n        localStorage.setItem('expiresAt', this.expiresAt);\n        localStorage.setItem('accessToken', this.accessToken);\n        localStorage.setItem('idToken', this.idToken);\n        localStorage.setItem('isLoggedIn', 'true');\n\n        try {\n            const res = await axios.get(baseUrl + '/profile', {headers: {'Authorization': 'Bearer ' + this.idToken}})\n            this.user = res.data[0]\n            localStorage.setItem('user', JSON.stringify(this.user));\n        }finally {\n            this.history.replace('/createProfile')\n        }\n\n        // navigate to the home route\n        this.history.replace('/');\n    }\n\n    renewSession() {\n        this.auth0.checkSession({}, (err, authResult) => {\n            if (authResult && authResult.accessToken && authResult.idToken) {\n                this.setSession(authResult);\n            } else if (err) {\n                this.logout();\n                console.log(err);\n                alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n            }\n        });\n    }\n\n    logout() {\n        // Remove tokens and expiry time\n        this.accessToken = null;\n        this.idToken = null;\n        this.expiresAt = 0;\n\n        // Remove isLoggedIn flag from localStorage\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('idToken');\n        localStorage.removeItem('expiresAt');\n        this.is_loggedIn = false;\n\n        this.auth0.logout({\n            return_to: window.location.origin\n        });\n\n        // navigate to the home route\n        this.history.replace('/');\n    }\n\n    isAuthenticated() {\n        // Check whether the current time is past the\n        // access token's expiry time\n        let expiresAt = this.expiresAt;\n        return new Date().getTime() < expiresAt;\n    }\n}","import React, { Component } from 'react'\nimport {DropzoneDialog} from 'material-ui-dropzone'\nimport * as axios from \"axios\";\nimport {baseUrl} from \"../../config\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ImageIcon from '@material-ui/icons/Image';\n\nexport class DropzoneDialogExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            files: []\n        };\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    async handleSave(files) {\n        //Saving files to state for further use and closing Modal.\n        this.setState({\n            files: files,\n        });\n        console.log(files)\n        const url = await axios.get(baseUrl + `/media_upload_url/${files[0].name}`, {headers: {'Authorization': 'Bearer ' + this.props.auth.idToken}})\n        await axios.put(url.data.url, files[0])\n        this.props.sendMsg('photo', '', url.data.path)\n        this.setState({open: false})\n    }\n\n    handleOpen() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <IconButton onClick={this.handleOpen.bind(this)}>\n                    <ImageIcon />\n                </IconButton>\n                <DropzoneDialog\n                    open={this.state.open}\n                    onSave={this.handleSave.bind(this)}\n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                    showPreviews={true}\n                    maxFileSize={5000000}\n                    onClose={this.handleClose.bind(this)}\n                    multiple={false}\n                />\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport * as axios from \"axios\";\nimport {baseUrl, websocketUrl} from \"../../config\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport {Avatar, MessageBox, MessageList, Navbar} from \"react-chat-elements\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport {DropzoneDialogExample} from \"./fileUpload.component\";\nimport LoadingOverlay from 'react-loading-overlay';\n\n\nexport default class ChatGrid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            msgList: [],\n            newMsg: \"\",\n            loading: false\n        }\n\n        this.msgListElement = React.createRef();\n\n        this.socket = new WebSocket(`${websocketUrl}?Authorization=Bearer ${props.auth.idToken}`)\n        this.socket.onopen = (e) => {\n            console.log('Socket Connected')\n            console.log(e)\n        }\n        this.socket.onclose = () => {\n            this.socket = new WebSocket(`${websocketUrl}?Authorization=Bearer ${props.auth.idToken}`)\n        }\n        this.socket.onmessage = (e) => {\n            if (JSON.parse(e.data).item) {\n                if (JSON.parse(e.data).item.from === this.props.currChat.username || JSON.parse(e.data).item.to === this.props.currChat.username) {\n                    const msg = JSON.parse(e.data).item\n                    let msgs = this.state.msgList\n                    if (msg.type === 'photo') {\n                        msgs.push({\n                            position: (msg.from === this.props.auth.user.username ? 'right' : 'left'),\n                            type: 'photo',\n                            text: msg.message,\n                            date: Date.parse(msg.createdAt),\n                            data: {\n                                uri: msg.photoUrl,\n                                ...msg\n                            }\n                        })\n                    } else {\n                        msgs.push({\n                            position: (msg.from === this.props.auth.user.username ? 'right' : 'left'),\n                            type: 'text',\n                            text: msg.message,\n                            date: Date.parse(msg.createdAt),\n                            data: msg\n                        })\n                    }\n                    this.setState({msgList: msgs})\n                    this.props.chatList[this.props.currChat.index].lastMsg = msg\n                    this.props.chatList[this.props.currChat.index].subtitle = msg.message\n                    this.props.chatList[this.props.currChat.index].date = Date.parse(msg.createdAt)\n                    this.props.chatList[this.props.currChat.index].unread = 0\n                    console.log(this.props.chatList)\n                    this.props.setData(this.props.chatList)\n                } else {\n                    this.props.getChats();\n                }\n            }\n            console.log(e)\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.currChat !== '' && this.props.chatList[this.props.currChat.index].unread > 0) {\n            this.props.chatList[this.props.currChat.index].unread = 0\n            this.props.setData(this.props.chatList)\n            this.socket.send(JSON.stringify({\n                action: 'seenMsg',\n                to: this.props.currChat.username\n            }))\n        }\n\n        const f = async () => {\n            if (this.props.currChat !== '' && this.props.currChat !== prevProps.currChat) {\n                this.setState({loading: true})\n\n                const res = await axios.get(baseUrl + `/chats/${this.props.currChat.username}`, {headers: {'Authorization': 'Bearer ' + this.props.auth.idToken}})\n                let msgs = []\n                for (let i in res.data) {\n                    const msg = res.data[i];\n                    if (msg.type === 'photo') {\n                        msgs.push({\n                            position: (msg.from === this.props.auth.user.username ? 'right' : 'left'),\n                            type: 'photo',\n                            text: msg.message,\n                            date: Date.parse(msg.createdAt),\n                            data: {\n                                uri: msg.photoUrl,\n                                ...msg\n                            }\n                        })\n                    } else {\n                        msgs.push({\n                            position: (msg.from === this.props.auth.user.username ? 'right' : 'left'),\n                            type: 'text',\n                            text: msg.message,\n                            date: Date.parse(msg.createdAt),\n                            data: msg\n                        })\n                    }\n                }\n                this.setState({msgList: msgs})\n                this.setState({loading: false})\n            }\n        }\n        f();\n        const node = this.msgListElement.current\n        if (node)\n            node.setState({scrollBottom: node.getBottom(node.mlistRef)}, node.checkScroll.bind(node));\n    }\n\n    handleSend = () => {\n        this.sendMsg('text', this.state.newMsg)\n    }\n\n    sendMsg = (type, msg, path) => {\n        this.setState({newMsg: \"\"})\n        this.socket.send(JSON.stringify({\n            action: 'sendMsg',\n            type,\n            to: this.props.currChat.username,\n            msg,\n            path\n        }))\n    }\n\n    handleNewMsgChange = (e) => {\n        this.setState({newMsg: e.target.value})\n    }\n\n    keyPress = (e) => {\n        if (!e.shiftKey && e.key === \"Enter\") {\n            this.handleSend();\n            e.preventDefault()\n        }\n    }\n\n    render() {\n        if (this.props.currChat !== '') {\n            return (\n                <GridList direction={'column'} cellHeight={1} style={{height: '100%'}}>\n                    <LoadingOverlay\n                        active={this.state.loading}\n                        spinner\n                        className=\"loading\"\n                        text='Loading chats...'\n                    >\n                        <GridListTile rows={60} cols={2}>\n                            <Navbar\n                                left={\n                                    <Avatar\n                                        src={'https://ssl.gstatic.com/images/branding/product/1x/avatar_circle_blue_512dp.png'}\n                                        alt={'logo'}\n                                        size=\"large\"\n                                        type=\"circle\"\n                                        className={'chat-top-bar-avatar'}\n                                    />\n                                }\n                                center={\n                                    <Typography type={'h6'}>\n                                        {this.props.currChat.name}\n                                    </Typography>\n                                }\n                                right={\n                                    <div/>\n                                }/>\n                        </GridListTile>\n                        <GridListTile rows={721} cols={2}>\n                            <MessageList\n                                ref={this.msgListElement}\n                                className='message-list'\n                                lockable={true}\n                                toBottomHeight={'100%'}\n                                dataSource={this.state.msgList}\n                                downButton/>\n                        </GridListTile>\n                        <GridListTile rows={55} cols={2} className={'send-msg-container'}>\n                            <Grid container>\n                                <Grid item xs={10}>\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        placeholder=\"Start typing...\"\n                                        margin=\"normal\"\n                                        fullWidth\n                                        multiline\n                                        rowsMax={6}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        size={'medium'}\n                                        className={'send-msg-text-input'}\n                                        onChange={this.handleNewMsgChange}\n                                        onKeyDown={this.keyPress}\n                                        value={this.state.newMsg}\n                                    />\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <IconButton style={{marginTop: 2, marginLeft: 5}} onClick={this.handleSend}>\n                                        <SendIcon/>\n                                    </IconButton>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <DropzoneDialogExample sendMsg={this.sendMsg} {...this.props}/>\n                                </Grid>\n                            </Grid>\n                        </GridListTile>\n                    </LoadingOverlay>\n                </GridList>\n        )\n        } else {\n            return (<div/>)\n        }\n    }\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {FormGroup, Paper, TextField} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport axios from \"axios\";\nimport Fab from \"@material-ui/core/Fab\";\nimport {baseUrl} from \"../../config\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(3, 5, 4),\n        width: '35%',\n    },\n    closeBtn: {\n        float: 'right',\n        padding: '0'\n    }\n}));\n\nexport default function NewChatModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [username, setUserName] = React.useState('');\n    const [msg, setMsg] = React.useState(0);\n    const [errors, setError] = React.useState();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleUserNameChange = (e) => {\n        setUserName(e.target.value);\n    };\n\n    const handleMessageChange = (e) => {\n        setMsg(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n        setError('')\n        try {\n            const res = await axios.post(`${baseUrl}/message`, {\n                to: username,\n                msg: msg\n            }, {headers: {'Authorization': 'Bearer ' + props.auth.idToken}})\n            props.getChats();\n            setOpen(false)\n        } catch (e) {\n            console.log(e)\n            setError('Invalid username!')\n        }\n    };\n\n    return (\n        <div>\n            <Fab color=\"primary\" onClick={handleOpen} aria-label=\"add\"\n                 style={{float: 'right', bottom: '10px', position: 'absolute', right: '10px'}}>\n                <AddIcon/>\n            </Fab>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Paper className={classes.paper}>\n                        <IconButton className={classes.closeBtn} onClick={handleClose}>\n                            <CloseIcon/>\n                        </IconButton>\n                        <h1 id=\"transition-modal-title\" style={{textAlign: 'center'}}>New Chat</h1>\n                        <FormGroup style={{alignItems: 'center'}}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Username\"\n                                name=\"username\"\n                                onChange={handleUserNameChange}\n                            />\n                            <br/>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Message\"\n                                name=\"message\"\n                                onChange={handleMessageChange}\n                            />\n                            <Typography style={{color: 'red'}}>\n                                {errors}\n                            </Typography><br/><br/>\n                            <Button variant=\"contained\" style={{width: '50%'}} color=\"primary\" onClick={handleSubmit}>\n                                Send Message\n                            </Button>\n                        </FormGroup>\n                    </Paper>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: '100px',\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 4),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nexport default function Welcome(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <main>\n                <div className={classes.heroContent}>\n                    <Container maxWidth=\"md\">\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom\n                                    style={{marginBottom: '50px'}}>\n                            Serverless Chat Application\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph style={{textAlign: 'center'}}>\n                            This is a simple chat app built using Node, on in serverless environment on AWS.<br/><br/>\n                            Key features of the app :\n                            <li>Secured Authentication using Auth0 and OAuth.</li>\n                            <li>Supports sharing of images.</li>\n                            <li>User friendly UI and UX</li>\n                            <br />\n                            To get started, Login and click on (+) icon to start a new chat.\n                        </Typography>\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={2} justify=\"center\">\n                                <Grid item>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{props.auth.login()}}>\n                                        Login\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                        <br/><br/>\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph style={{textAlign: 'center'}}>\n                            For more, do visit <Link target=\"_blank\" href=\"https://github.com/pnshiralkar/serverless-chat-app\">Github repo</Link>.\n                        </Typography>\n                    </Container>\n                </div>\n\n            </main>\n        </div>\n    );\n}","import React from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport './home.css'\nimport 'react-chat-elements/dist/main.css';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport {ChatList} from \"react-chat-elements\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ChatGrid from \"../chatGrid/chatGrid.component\";\nimport * as axios from \"axios\";\nimport {baseUrl} from \"../../config\";\nimport NewChatModal from \"./newChat\";\nimport GridList from \"@material-ui/core/GridList\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Welcome from \"./welcome.component\";\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatList: [],\n            currChat: '',\n            sendMsg: null,\n            loading: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.getChats();\n    }\n\n    getChats = async () => {\n        if (this.props.auth.is_loggedIn) {\n            this.setState({loading: true})\n            try {\n                const res = await axios.get(baseUrl + '/profile', {headers: {'Authorization': 'Bearer ' + this.props.auth.idToken}})\n                localStorage.setItem('user', JSON.stringify(res.data[0]));\n                let chats = [];\n                if (res.data[0]) {\n                    let c = 0;\n                    for (let i in res.data[0].chats) {\n                        const chat = res.data[0].chats[i]\n                        chats.push({\n                            title: chat.user.name,\n                            subtitle: chat.lastMsg.message,\n                            date: Date.parse(chat.lastMsg.createdAt),\n                            unread: chat.unreadCount,\n                            data: {username: i, index: c, ...(chat.user)}\n                        })\n                        c += 1;\n                    }\n                    this.setState({chatList: chats})\n                    console.log(chats)\n                }\n            } catch (e) {\n                if (e.response && e.response.status === 403)\n                    this.props.auth.login();\n            }\n            finally {\n                this.setState({loading: false})\n            }\n        }\n    }\n\n    handleChatClick = (e) => {\n        this.setState({currChat: e.data})\n    }\n\n    setData = (data) => {\n        this.setState({chatList: data})\n    }\n\n    render() {\n        const {classes} = this.props\n        return (<div>\n            <CssBaseline/>\n            <main>\n                <div className={classes.appBarSpacer}/>\n                <div className={classes.paperMarginTop}/>\n                <Container>\n                    {this.props.auth.is_loggedIn &&\n                    <LoadingOverlay\n                        active={this.state.loading}\n                        spinner\n                        className=\"loading\"\n                        text='Fetching your chats...'\n                    >\n                    <Paper className=\"home-paper\" elevation={4} style={{background: '#fff'}}>\n                        <Grid container style={{height: '100%'}}>\n                            <Grid item xs={4} style={{position: 'relative'}}>\n                                <div style={{position: 'absolute', height: '85vh', width: '100%'}}>\n                                    {!this.state.loading && <NewChatModal auth={this.props.auth} getChats={this.getChats}/>}\n                                </div>\n                                <ChatList classname=\"chat-list\" dataSource={this.state.chatList}\n                                          onClick={this.handleChatClick}/>\n                            </Grid>\n                            <Grid item xs={8} style={{height: '100%'}}>\n                                {<ChatGrid currChat={this.state.currChat} chatList={this.state.chatList}\n                                           setData={this.setData} getChats={this.getChats} {...this.props}  style={{height: '100%'}}/>}\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    </LoadingOverlay>\n                    }\n                    {!this.props.auth.is_loggedIn &&\n                    <Welcome auth={this.props.auth}/>\n                    }\n                </Container>\n            </main>\n        </div>)\n    }\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport axios from 'axios'\nimport * as qs from \"qs\";\nimport {reactLocalStorage} from 'reactjs-localstorage'\nimport {AccountCircle} from \"@material-ui/icons\";\nimport {baseUrl} from \"../../config\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'relative',\n        top: '40vh',\n        transform: 'translateY(-50%)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            name: \"\",\n            validUsername: true,\n            validName: true,\n            errors: \"\"\n        }\n    }\n\n\n    nameChange = (e) => {\n        this.setState({name: e.target.value});\n        if (!(e.target.value.toString().length >= 8))\n            this.setState({validName: false});\n        else\n            this.setState({validName: true})\n    };\n\n\n    usernameChange = (e) => {\n        this.setState({username: e.target.value});\n        if (!(e.target.value.toString().length >= 5))\n            this.setState({validUsername: false});\n        else\n            this.setState({validUsername: true})\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        // Username\n        if (!(this.state.username.toString().length >= 5))\n            this.setState({validUsername: false});\n        else\n            this.setState({validUsername: true});\n\n        // Pwd\n        if (!(this.state.name.toString().length >= 8))\n            this.setState({validName: false});\n        else\n            this.setState({validName: true});\n\n        if (this.state.validUsername && this.state.validName) {\n            let data = {\n                username: this.state.username,\n                name: this.state.name\n            };\n            const config = {\n                headers: {'Authorization': 'Bearer ' + this.props.auth.idToken}\n            };\n            axios.post(baseUrl + '/profile', data, config).then(res => {\n                this.setState({errors: \"\"});\n                this.props.history.replace('/')\n            }).catch(error => {\n                if (!error.response) {\n                    // network error\n                    console.log('Error: Network Error\\n' + error);\n                } else {\n                    let res = error.response.data;\n                    let errors = \"\";\n                    for (let i in res)\n                        errors += res[i] + \"\\n\";\n                    this.setState({errors});\n                }\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <form className={this.props.classes.form}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                error={!this.state.validUsername}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                onChange={this.usernameChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                error={!this.state.validName}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"name\"\n                                label=\"Name\"\n                                type=\"text\"\n                                id=\"name\"\n                                onChange={this.nameChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormHelperText error>\n                                {this.state.errors}\n                            </FormHelperText>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={this.props.classes.submit}\n                        onClick={this.submit}\n                    >\n                        Create\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default function CreateProfile(props) {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <AccountCircle/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Create Profile\n                </Typography>\n                <Form classes={classes} {...props}/>\n            </div>\n        </Container>\n    );\n}","import React, {useState} from 'react';\nimport {Route, Switch, useHistory, withRouter} from \"react-router-dom\";\nimport MenuAppBar from \"./components/app-bar/app-bar.component\";\nimport './App.css';\nimport Auth from \"./auth\";\nimport Home from \"./components/home/home.component\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CreateProfile from \"./components/profile/createprofile.component\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paperMarginTop: {\n        marginTop: theme.spacing(4)\n    }\n}))\n\nfunction App() {\n    const history = useHistory();\n    const [auth] = useState(new Auth(history))\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MenuAppBar title={\"Serverless Chat App\"} history={history} auth={auth}/>\n            <Switch>\n                <Route\n                    path=\"/callback\"\n                    render={props => {\n                        auth.handleAuthentication(props)\n                        return <AuthCallback classes={classes}/>\n                    }}\n                />\n                <Route path={'/createProfile'}>\n                    <CreateProfile auth={auth} history={history}/>\n                </Route>\n                <Route path=\"/\">\n                    <Home auth={auth} classes={classes}/>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default withRouter(App);\n\n\nclass AuthCallback extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <CssBaseline/>\n                <main>\n                    <div className={this.props.classes.appBarSpacer}/>\n                    <div className={this.props.classes.paperMarginTop}/>\n                    <Container className={'logging-in-wrapper'}>\n                        <Typography variant={'h2'} style={{textAlign: 'center', marginBottom: '3vh'}}>\n                            Logging In\n                        </Typography>\n                        <CircularProgress color=\"#d0d0d0\"/>\n                    </Container>\n                </main>\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}